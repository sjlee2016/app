<article>
    <div class="container">
      <div class="row">
        <div class="col-lg-8 col-md-10 mx-auto">
          <p> 
              모두 새해 잘보내셨나요? 저는 2018년에는 운좋게도 해외에 와서 적응하느라 정말 정신없이
              보낸 것 같아요. 2019년에는 개발자로서 더 바쁘면서 ? 더 행복하고 싶어요 주위 사람들도 마찬가지구요!
              제가 회사에 2018년 9월 말에 왔고 지금 1월 말이니깐 딱 4개월이 됬네요. 4개월동안 이 블로그에 4번밖에
              포스팅을 못한것도 소름돋네요 ㅋㅋㅋㅋㅋ      
          </p>
          <h3 class="section-heading">대학교를 컴공생으로 입학하고</h3>
          <p> 저는 사실 JAVA 를 고3때 처음 접했어요. 지금 생각해보면 수업으로 정말 기본 문법을 배운게 다였지만 나름 
              반에서 성적도 제일 잘나오고 (굉장히 TMI) 상까지 받아서 <blockquote class="blockquote">'와 미쳤다 이거 나의 길이다 그냥 제 2의 빌게이츠각 '</blockquote>
              라고 생각했어요. 그래서 저는 고민없이 모든 미국 대학, 캐나다대학, 한국대학 다 컴퓨터공학과로 지원했고 결국 현재 학교에 입학하게 됬어요. 그때까지만 해도 
              고등학교 코딩수업에서 풀었던 문제들은 하나같이 저에게 쉬웠어요. 저는 근데 그게 문제 수준이 낮은줄 몰랐고 그냥 제가 엄청 잘하는거구나 생각했죠     
              지금 생각해보면 이건 거의 알파벳을 배우고 간단한 스펠링 테스트를 만점 받았다고 제 2의 셰익스피어가 될꺼라고 생각했던거랑 비슷한거였어요.  
          </p>
          <p>
          <b>기초공학설계</b> 라는 1학년 1학기 전공수업을 들으면서 다행히도? 이게 큰 착각이라는걸 알 수 있었어요. 
           나름 몇일 공부를 열심히하고 필기도 열심히한 오픈북 기말 시험이였는데도 저는 정말 한 문제도 제대로 풀지 못했어요.
           그 날 저녁 동기들이랑 술을 마시면서 다른 과로 반수해야하나 고민도 했었어요. 
           <blockquote class="blockquote">'와 미쳤다 이거 나한테 안맞는것 같은데'</blockquote>
            다른과는 절대 안가!! 컴공만 갈꺼야 라고 외쳤던 저는 불과 6개월만에 다른 과를 가야하는지 고민하게 됬어요. 
          </p>
          <h3 class="section-heading">실제 개발은 학교 수업과 다를까? </h3>
          <p> 
              이와 같이 저는 새내기때부터 전공에 관한 고민이 많았어요. 그렇게 2학년이 되자 친했던 선배들 몇 명이 인턴으로
              일하기 시작했고 저는 정말 궁금했어요.  
              <blockquote class="blockquote">'개발자 인턴으로 회사에 가면 어떤걸 구현하는걸까?'</blockquote>
              2학년 수업에선 그 당시 어셈블리 언어, 자료구조등을 배웠는데 이런걸 배워서 어떻게 어디서 써먹는걸까 항상 
              궁금했던 것 같아요. 그래서 이 포스트에서는 제가 백엔드 인턴으로 4개월 일하면서 어떤 것을 구현했는지 얘기 해보려고해요.
          </p>
          <h3 class="section-heading">백앤드 개발자란?</h3>
          <img class="img-fluid" src="/images/backend.jpg" alt="">
          <p>
               <b>백엔드 개발자</b>란 사용자가 보지 못하는 서버, 데이터베이스, API 등을 관리하고 개발하는 것이에요. (하지만 가끔 코딩이 막힐때 정말 이런 사진처럼 행동할 수도 있습니다) <br> 
               <b>프론트 개발자는</b>반대로 웹사이트에서 사용자가 직접 보고 interact 할 수 있는것을 개발하는 것입니다 <br> 
               프론트는 사용자와 직접 소통하지만 백엔드쪽은 사용자와 만나지않고 프론트를 통해서 데이터를 얻고 처리를 해요. 
          </p>
          <h3 class="section-heading">제일 재밌었던 업무</h3>
          <p>

          <img class="img-fluid" src="/images/analysis.jpg" alt="">
              일단 저희 회사를 짧게 설명하자면 플레이스토어같은 모바일 게임 스토어를 운영하는 회사에요. 또 최근에 새로 시작한 프로젝트는
              다양한 게임을 토너먼트 형식으로 바꿔서 운영하는 웹사이트가 있어요. <br> 
              작은 개발팀이기 때문에 두 가지 프로젝트 다 백엔드 인턴으로 참여하고 있어요.
            </p> 
            <p> 
              개인적으로 4개월동안 일하면서 제일 재밌었고 뿌듯했던 개발 경험은 <b> 사용자 분석을 위해 사용자의 행동마다 message queue 에 메세지를 날리는 일 </b>
              이 였어요.일단 윗분이 사용자가 프로필을 바꾸거나, 게임을 시작하거나 , 친구추가를 하거나
              등 약 20가지 다른 행동을 리스트로 저에게 주셨어요. 저의 일은 이 행동들을 가능하게 하는 API 를 찾아서
              그 코드가 실행될때 메세지로 행동 타입, 해당 사용자의 정보와 다른 정보들을 넣어서 message queue 에 보내는 것이였어요.
              20가지나 넘어서 각 행동마다 돌아가는 코드를 찾고 수정하는데 꽤 많은 시간이 걸렸어요. 
          </p>
          <p> 
              또 제일 기억나는 건 사용자가 게임을 많이 플레이 할수록 선물을 지급하는 일이에요. 
              <blockquote class="blockquote">'1. 사용자가 게임을 끝내고 5분이상 지난 뒤에 새로운 게임을 1분이상 플레이하면 이를 게임 세션이라고 친다.'</blockquote>
              <blockquote class="blockquote">'2. 이러한 게임 세션을 이는 24시간안에 3번 플레이하면 선물을 한 개를 지급하고 24시간에 최대로 5개를 받을 수 있다.'</blockquote>
              처음에 이러한 조건대로 그냥 선물을 지급하면 되는구나 하고 하루만에 끝낼 수 있을줄 알았어요. 
              근데 저희 게임 스토어에는 여러가지 개발자들이 서로 다른 개발툴을 사용해서 만든 게임들이여서 
              저희쪽에서 정확하게 사용자가 게임을 언제 그만 하는지 알아내기 힘든게 난관이였어요. 
              특히나 모바일 스토어이기 때문에 사용자가 게임을 그만두고 다른 앱을 사용해도 게임이 백그라운드에서
              계속 돌아갈 수도 있기 때문이죠. 그래서 처음에는 엄청 쉬울 것 같던 일이 실제로 구현을 시작하니 
              엄청 어려웠어요.
            </p>
          <h3 class="section-heading">제일 자주하는 업무</h3>
          <p>

          <img class="img-fluid" src="/images/weep.jpg" alt="">
              위에 설명한 것처럼 <b> API 를 새로 개발하거나 기능을 추가</b>하게 되면 QA 팀이
              그 기능이 제대로 돌아가는지, 문제나 에러는 없는지 체크를 해요. <br> 
              실제로 코드를 작성하고 잘돌아가는지 직접 테스트를 하고 정상적이게 돌아가야 
              pull request를 하지만 혼자서 테스트할때와 몇만명의 유저들이 사용할때는 
              정말 다른 결과가 나올 수도 있어요. <br> 
              생각지도 못한 케이스가 예외 처리가 안될 수도 있고 원인을 바로 알 수 없는 에러, 
              그것도 아니면 정말 경솔한 실수를 할 수도 있어요. 그렇게되서 에러가 발생하면 QA 팀에서
              알려주고 다시 고쳐야해요. 저는 인턴이라 제가 직접 작성했던 API 가 아니여도 사소한 에러는
              자주 제가 고쳐요. 그래서 사실 제일 자주하는 업무는 디버깅해서 에러의 원인을 찾는거에요.  
            </p>
            <p>
                또, 웹사이트가 기능들을 추가해서 새로운 버전을 릴리즈할때마다 저는 <b>유닛 테스트</b>를 
                돌리고 모든게 잘돌아가는지 체크하는 일을 하는데요. 여기서 유닛테스트란 
                소스 코드의 특정 모듈이 의도된 대로 정확히 작동하는지 검증하는거에요. 예를 들어 '+'가 
                제대로 작동하는지 체크하고 싶으면 1+1=2 가 사실인지 체크하는 테스트에요. 그래서 
                중요한 메소드를 작성하게 되면 대부분 유닛테스트도 같이 작성해야해요. 저희 토너먼트 웹사이트만
                해도 이러한 유닛테스트가 몇백개가 되는데 그게 한개라도 fail 되면 어떤 문제가 있는지 체크하고
                고치는걸 많이 했어요.    
            </p> 
          <h3 class="section-heading">힘들지만 .. 개발자 인턴이 재밌는 이유</h3>
          <p>
             시작한지 4개월이 됬지만 거의 매 주 구현하는 것들이 달라요. 왠지 뭔가 문서작업을 한다면 
             거의 매일 같은 일을 해야해서 금방 질릴것같은데 개발자로 인턴을 하니깐 항상 새로운 것 같아요.
             또 학교에서 전공에 대해 많이 고민 했었는데 이번에 인턴을 오면서 이 길로 쭉 가고 싶다고 
             생각이 바뀌게 된 것 같아요. 저는 개인적으로 학교에서 배우는 코딩이랑 회사에서 하는 코딩이랑
             정말 다르다고 느꼇어요. 그래서 만약 지금 학교 수업에 흥미를 가지기 어려워서 다른 전공을 고민하신다면
             회사에서 개발 인턴 경험을 하는걸 추천해드리고 싶어요!   <br> 
          </p>
        </div>
      </div>
    </div>
  </article>